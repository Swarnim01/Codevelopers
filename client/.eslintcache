[{"/home/swarnim/Codevelopers/client/src/index.js":"1","/home/swarnim/Codevelopers/client/src/components/Signinup.js":"2","/home/swarnim/Codevelopers/client/src/components/Navbar.js":"3","/home/swarnim/Codevelopers/client/src/reportWebVitals.js":"4","/home/swarnim/Codevelopers/client/src/components/UserProfile.js":"5","/home/swarnim/Codevelopers/client/src/service/authmethod.js":"6","/home/swarnim/Codevelopers/client/src/App.js":"7","/home/swarnim/Codevelopers/client/src/components/message.js":"8","/home/swarnim/Codevelopers/client/src/components/createpost.js":"9","/home/swarnim/Codevelopers/client/src/components/home.js":"10","/home/swarnim/Codevelopers/client/src/components/profile.js":"11","/home/swarnim/Codevelopers/client/src/reducers/userReducer.js":"12","/home/swarnim/Codevelopers/client/src/components/chat.js":"13"},{"size":500,"mtime":1675762173248,"results":"14","hashOfConfig":"15"},{"size":12201,"mtime":1678726897807,"results":"16","hashOfConfig":"15"},{"size":11092,"mtime":1677091587955,"results":"17","hashOfConfig":"15"},{"size":362,"mtime":1675762173248,"results":"18","hashOfConfig":"15"},{"size":5149,"mtime":1675762173248,"results":"19","hashOfConfig":"15"},{"size":345,"mtime":1675762173252,"results":"20","hashOfConfig":"21"},{"size":3294,"mtime":1677190757021,"results":"22","hashOfConfig":"15"},{"size":4997,"mtime":1677193618023,"results":"23","hashOfConfig":"15"},{"size":3948,"mtime":1675762173248,"results":"24","hashOfConfig":"15"},{"size":9617,"mtime":1677190836256,"results":"25","hashOfConfig":"15"},{"size":3475,"mtime":1675762173248,"results":"26","hashOfConfig":"15"},{"size":239,"mtime":1675762173248,"results":"27","hashOfConfig":"15"},{"size":319,"mtime":1677193156723,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1u6pljq",{"filePath":"32","messages":"33","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yho38g",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/swarnim/Codevelopers/client/src/index.js",[],["58","59"],"/home/swarnim/Codevelopers/client/src/components/Signinup.js",["60","61","62","63","64","65","66","67","68","69"],"/home/swarnim/Codevelopers/client/src/components/Navbar.js",["70","71"],"/home/swarnim/Codevelopers/client/src/reportWebVitals.js",[],"/home/swarnim/Codevelopers/client/src/components/UserProfile.js",["72","73"],"import React, { useContext, useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport swarnim from '../image/swarnim.jpeg';\nimport '../css/profile.css';\nimport { UserContext } from '../App';\nconst UserProfile = () => {\n  const [userprofile, setuserprofile] = useState(null);\n  const [userpost, setuserpost] = useState(null);\n  const { state , dispatch } = useContext(UserContext)\n  console.log('userprofile:' , userprofile);\n  console.log('userpost',userpost);\n  const {userId} = useParams();\n  useEffect(() => {\n    fetch(`/profile/${userId}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('detail of fetched userId',data);\n        setuserprofile(data.user);\n        setuserpost(data.post);\n      });\n  }, []);\n\n  const FollowUser = (followId) =>{\n          fetch('/follow', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            followId\n           }),\n          })\n          .then((response) => response.json())\n          .then((data) => {\n            setuserprofile(data.result2)\n          });\n}\n  const UnFollowUser = (followId) =>{\n          fetch('/unfollow', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            followId\n           }),\n          })\n          .then((response) => response.json())\n          .then((data) => {\n            setuserprofile(data.result2)\n          });\n}\n  return (\n    <>\n      {userprofile && userpost ? (\n        <div\n          style={{\n            margin: '0px auto',\n            maxWidth: '970px',\n            marginTop: '5rem',\n            padding: '0 0.5rem',\n          }}\n        >\n          <div\n            className='row'\n            style={{ borderBottom: '1px solid grey', paddingBottom: '3rem' }}\n          >\n            <div className='col-md-3'>\n              <img\n                src={swarnim}\n                alt='profile'\n                style={{\n                  height: '160px',\n                  width: '160px',\n                  borderRadius: '50%',\n                  objectFit: 'cover',\n                }}\n              />\n            </div>\n            <div\n              className='col-md-9'\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                }}\n              >\n                <h3 style={{ marginRight: '1.5rem' }}>\n                  {userprofile.username}\n                </h3>\n\n                {userprofile.followers.includes(state._id) ? (\n                  <button\n                    style={{\n                      width: '7rem',\n                      height: '2rem',\n                      border: 'none',\n                      color: 'white',\n                      background: '#019be6',\n                    }}\n                    onClick={() => UnFollowUser(userprofile._id)}\n                  >\n                    UnFollow\n                  </button>\n                ) : (\n                  <button\n                    style={{\n                      width: '7rem',\n                      height: '2rem',\n                      border: 'none',\n                      color: 'white',\n                      background: '#019be6',\n                    }}\n                    onClick={() => FollowUser(userprofile._id)}\n                  >\n                    Follow\n                  </button>\n                )}\n              </div>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}\n              >\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userpost.length}</b> posts\n                </h6>\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userprofile.followers.length}</b> followers\n                </h6>\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userprofile.following.length}</b> following\n                </h6>\n              </div>\n              <div>\n                <h6>\n                  <b>{userprofile.username}</b>\n                </h6>\n                <h6>IIIT Gwalior</h6>\n              </div>\n            </div>\n          </div>\n          <div className='posts'>\n            {userpost.map((item) => {\n              return <img className='post' src={item.imageuri} alt='post' />;\n            })}\n          </div>\n        </div>\n      ) : (\n        <h2\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            alignContent: 'center',\n          }}\n        >\n          Loading...\n        </h2>\n      )}\n    </>\n  );\n};\n\nexport default UserProfile;\n","/home/swarnim/Codevelopers/client/src/service/authmethod.js",[],"/home/swarnim/Codevelopers/client/src/App.js",["74","75"],"/home/swarnim/Codevelopers/client/src/components/message.js",["76","77"],"/home/swarnim/Codevelopers/client/src/components/createpost.js",["78","79"],"/home/swarnim/Codevelopers/client/src/components/home.js",["80"],"import React,{useState,useEffect, useContext, useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Card , CardHeader , CardMedia , CardContent , CardActions , Avatar ,IconButton , Typography} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faGrin } from '@fortawesome/free-regular-svg-icons';\nimport { UserContext } from '../App';\nimport { Link } from 'react-router-dom';\nimport socket from '../www/socket';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '600px',\n    margin:'0px auto',\n    marginTop:'5rem'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst Homepost = () => {\n  const classes = useStyles();\n  const {state , dispatch } = useContext(UserContext);\n  // const loggedInUser = useContext(LoggedInUserContext);\n\n  const checkIfUserExists = useCallback(() => {\n    const sessionID = localStorage.getItem(\"sessionID\");\n    if(sessionID){\n    socket.auth = { sessionID };\n    socket.connect();\n  }\n  },[])\n  useEffect(() => {\n    checkIfUserExists();\n    socket.on(\"session\", ({ sessionID, userID, username }) => {\n      // attach the session ID to the next reconnection attempts\n      socket.auth = { sessionID };\n      // store it in the localStorage\n      localStorage.setItem(\"sessionID\", sessionID);\n      // save the ID of the user\n      socket.userID = userID;\n      // loggedInUser.ToggleUser(userID);\n      localStorage.setItem(\"userID\", userID);\n    });\n    // socket.on('connect', () => {\n    //   console.log(socket.id);\n    // })\n  },[checkIfUserExists])\n\n  useEffect(()=>{\n    fetch('/showpost', {\n      method: 'get',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n    })\n    .then((response) => response.json())\n    .then((data)=>{\n      sethomepost(data);\n      console.log('to fetch data on refresh : /showpost',data);\n    });\n  },[])\n  \n  const [homepost , sethomepost] = useState([]);\n  console.log(homepost,'before fetching')\n  const [ comment , setcomment] = useState('');\n  const likepost = (id) =>{\n      fetch('/like', {\n        method: 'put',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          postId:id\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          const newhomepost = homepost.map((item)=>{\n              if(item._id === data._id ){\n                return(data);\n              }\n              else\n              return item;\n          })\n          sethomepost(newhomepost);\n        });\n  }\n\n    const unlikepost = (id) => {\n      fetch('/unlike', {\n        method: 'put',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          postId: id,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          const newhomepost = homepost.map((item) => {\n            if (item._id === data._id) {\n              return data;\n            } else return item;\n          });\n          sethomepost(newhomepost);\n        });\n    };\n\n      const Comment = (id , comment) => {\n        fetch('/comment', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            postId: id,\n            comment,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            const newhomepost  = homepost.map((item) => {\n              if (item._id === data._id) {\n                return data;\n              } else return item;\n            });\n            setcomment('')\n            sethomepost(newhomepost);\n          });\n      };\n\n            const DeleteComment = (id, commentId) => {\n              fetch(`/delete/${commentId}`, {\n                method: 'delete',\n                credentials: 'include',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                  postId: id,\n                }),\n              })\n                .then((response) => response.json())\n                .then((data) => {\n                  console.log(data);\n                  const newhomepost = homepost.map((item) => {\n                    if (item._id === data._id) {\n                      return data;\n                    } else return item;\n                  });\n                  sethomepost(newhomepost);\n                });\n            };\n  return (\n    <div className={classes.root}>\n      {homepost.map(({ caption, imageuri, likes, comments, postedBy, _id }) => {\n        return (\n          <Card key={_id} style={{marginBottom:'1rem'}}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label='recipe' className={classes.avatar}>\n                  S\n                </Avatar>\n              }\n              action={\n                <IconButton aria-label='settings'>\n                  <MoreVertIcon />\n                </IconButton>\n              }\n              title={\n                <Link\n                  style={{ textDecoration: 'none' , color:'black' }}\n                  to={\n                    postedBy._id !== state._id\n                      ? `/profile/${postedBy._id}`\n                      : '/profile'\n                  }\n                >\n                  {postedBy.username}\n                </Link>\n              }\n              subheader='Indian Institute of Information Technology and Management,Gwalior'\n            />\n            <CardMedia\n              className={classes.media}\n              title='posts'\n              image={imageuri}\n            />\n            <CardContent>\n              <Typography variant='body2' component='p'>\n                {caption}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton aria-label='add to favorites'>\n                {likes.includes(state._id) ? (\n                  <FavoriteIcon\n                    style={{ color: red[500] }}\n                    onClick={() => {\n                      unlikepost(_id);\n                    }}\n                  />\n                ) : (\n                  <FavoriteIcon\n                    onClick={() => {\n                      likepost(_id);\n                    }}\n                  />\n                )}\n              </IconButton>\n              <Typography variant='subtitle2' color='textSecondary'>\n                {likes.length} likes\n              </Typography>\n            </CardActions>\n\n            <CardContent>\n              {comments.map((item) => {\n                return (\n                  <Typography paragraph key={item._id}>\n                      {\n                        <Link\n                          style={{\n                            textDecoration: 'none',\n                            color: 'black',\n                            fontWeight: 'bold',\n                          }}\n                          to={\n                            item.postedBy._id !== state._id\n                              ? `/profile/${item.postedBy._id}`\n                              : '/profile'\n                          }\n                        >\n                          {item.postedBy.username}\n                        </Link>\n                      }{' '}\n                    {item.comment}\n                    {item.postedBy._id === state._id ? (\n                      <span style={{ float: 'right', cursor: 'pointer' }}>\n                        <FontAwesomeIcon\n                          icon={faTrash}\n                          onClick={() => DeleteComment(_id, item._id)}\n                        />\n                      </span>\n                    ) : null}\n                  </Typography>\n                );\n              })}\n            </CardContent>\n\n            <div style={{ padding: '0.8rem 0' }}>\n              <span style={{ padding: '0 0.6rem ' }}>\n                <FontAwesomeIcon icon={faGrin} />\n              </span>\n              <input\n                type='text'\n                placeholder='Add a comment....'\n                value={comment}\n                style={{\n                  background: 'none',\n                  outline: 'none',\n                  border: 'none',\n                  lineHeight: '1',\n                  fontWeight: '6000',\n                  fontSize: '1.0rem',\n                  color: '#333',\n                  padding: '0 0.4rem',\n                  width: '65%',\n                }}\n                onChange={(e) => setcomment(e.target.value)}\n              />\n              <button\n                style={{\n                  background: 'none',\n                  outline: 'none',\n                  border: 'none',\n                  lineHeight: '2',\n                  fontWeight: '6000',\n                  fontSize: '1.0rem',\n                  color: 'blue',\n                  float: 'right',\n                  margin: '0 1rem',\n                }}\n                onClick={() => Comment(_id, comment)}\n              >\n                Post\n              </button>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\nexport default Homepost;","/home/swarnim/Codevelopers/client/src/components/profile.js",["81"],"/home/swarnim/Codevelopers/client/src/reducers/userReducer.js",[],"/home/swarnim/Codevelopers/client/src/components/chat.js",["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":19},{"ruleId":"88","severity":1,"message":"92","line":7,"column":20,"nodeType":"90","messageId":"91","endLine":7,"endColumn":30},{"ruleId":"88","severity":1,"message":"93","line":7,"column":31,"nodeType":"90","messageId":"91","endLine":7,"endColumn":39},{"ruleId":"88","severity":1,"message":"94","line":7,"column":40,"nodeType":"90","messageId":"91","endLine":7,"endColumn":48},{"ruleId":"88","severity":1,"message":"95","line":10,"column":9,"nodeType":"90","messageId":"91","endLine":10,"endColumn":25},{"ruleId":"88","severity":1,"message":"96","line":10,"column":28,"nodeType":"90","messageId":"91","endLine":10,"endColumn":42},{"ruleId":"88","severity":1,"message":"97","line":10,"column":45,"nodeType":"90","messageId":"91","endLine":10,"endColumn":59},{"ruleId":"88","severity":1,"message":"98","line":10,"column":61,"nodeType":"90","messageId":"91","endLine":10,"endColumn":76},{"ruleId":"88","severity":1,"message":"99","line":17,"column":12,"nodeType":"90","messageId":"91","endLine":17,"endColumn":17},{"ruleId":"88","severity":1,"message":"100","line":92,"column":15,"nodeType":"90","messageId":"91","endLine":92,"endColumn":26},{"ruleId":"88","severity":1,"message":"101","line":4,"column":99,"nodeType":"90","messageId":"91","endLine":4,"endColumn":111},{"ruleId":"88","severity":1,"message":"102","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":25},{"ruleId":"88","severity":1,"message":"103","line":9,"column":19,"nodeType":"90","messageId":"91","endLine":9,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":25,"column":6,"nodeType":"106","endLine":25,"endColumn":8,"suggestions":"107"},{"ruleId":"88","severity":1,"message":"99","line":17,"column":17,"nodeType":"90","messageId":"91","endLine":17,"endColumn":22},{"ruleId":"104","severity":1,"message":"108","line":40,"column":8,"nodeType":"106","endLine":40,"endColumn":10,"suggestions":"109"},{"ruleId":"88","severity":1,"message":"110","line":1,"column":30,"nodeType":"90","messageId":"91","endLine":1,"endColumn":40},{"ruleId":"88","severity":1,"message":"111","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":21},{"ruleId":"88","severity":1,"message":"112","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":16},{"ruleId":"104","severity":1,"message":"113","line":45,"column":5,"nodeType":"106","endLine":45,"endColumn":15,"suggestions":"114"},{"ruleId":"88","severity":1,"message":"103","line":30,"column":18,"nodeType":"90","messageId":"91","endLine":30,"endColumn":26},{"ruleId":"88","severity":1,"message":"103","line":8,"column":19,"nodeType":"90","messageId":"91","endLine":8,"endColumn":27},{"ruleId":"88","severity":1,"message":"115","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"116","line":1,"column":28,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'faTwitter' is defined but never used.","Identifier","unusedVar","'faFacebook' is defined but never used.","'faGoogle' is defined but never used.","'faGithub' is defined but never used.","'FacebookProvider' is defined but never used.","'GoogleProvider' is defined but never used.","'GithubProvider' is defined but never used.","'TwitterProvider' is defined but never used.","'state' is assigned a value but never used.","'AuthHandler' is assigned a value but never used.","'ListItemText' is defined but never used.","'NotificationsIcon' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["119"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'setisSignin'. Either include them or remove the dependency array. If 'setisSignin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["120"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has missing dependencies: 'caption' and 'history'. Either include them or remove the dependency array.",["121"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [userId]",{"range":"128","text":"129"},"Update the dependencies array to be: [dispatch, history, setisSignin]",{"range":"130","text":"131"},"Update the dependencies array to be: [caption, history, imageuri]",{"range":"132","text":"133"},[892,894],"[userId]",[1579,1581],"[dispatch, history, setisSignin]",[1328,1338],"[caption, history, imageuri]"]