[{"/home/swarnim/Codevelopers/client/src/index.js":"1","/home/swarnim/Codevelopers/client/src/components/Signinup.js":"2","/home/swarnim/Codevelopers/client/src/components/Navbar.js":"3","/home/swarnim/Codevelopers/client/src/reportWebVitals.js":"4","/home/swarnim/Codevelopers/client/src/components/UserProfile.js":"5","/home/swarnim/Codevelopers/client/src/service/authmethod.js":"6","/home/swarnim/Codevelopers/client/src/App.js":"7","/home/swarnim/Codevelopers/client/src/components/message.js":"8","/home/swarnim/Codevelopers/client/src/components/createpost.js":"9","/home/swarnim/Codevelopers/client/src/components/home.js":"10","/home/swarnim/Codevelopers/client/src/components/profile.js":"11","/home/swarnim/Codevelopers/client/src/reducers/userReducer.js":"12","/home/swarnim/Codevelopers/client/src/components/chat.js":"13","/home/swarnim/Codevelopers/client/src/www/socket.js":"14"},{"size":500,"mtime":1675762173248,"results":"15","hashOfConfig":"16"},{"size":12201,"mtime":1678726897807,"results":"17","hashOfConfig":"16"},{"size":11092,"mtime":1677091587955,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1675762173248,"results":"19","hashOfConfig":"16"},{"size":5149,"mtime":1675762173248,"results":"20","hashOfConfig":"16"},{"size":345,"mtime":1675762173252,"results":"21","hashOfConfig":"22"},{"size":3294,"mtime":1677190757021,"results":"23","hashOfConfig":"16"},{"size":4997,"mtime":1677193618023,"results":"24","hashOfConfig":"16"},{"size":3992,"mtime":1678796675088,"results":"25","hashOfConfig":"16"},{"size":9617,"mtime":1677190836256,"results":"26","hashOfConfig":"16"},{"size":3494,"mtime":1678796840456,"results":"27","hashOfConfig":"16"},{"size":239,"mtime":1675762173248,"results":"28","hashOfConfig":"16"},{"size":319,"mtime":1677193156723,"results":"29","hashOfConfig":"16"},{"size":157,"mtime":1676853053632,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1u6pljq",{"filePath":"34","messages":"35","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yho38g",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/swarnim/Codevelopers/client/src/index.js",[],["65","66"],"/home/swarnim/Codevelopers/client/src/components/Signinup.js",["67","68","69","70","71","72","73","74","75","76"],"import React,{useState , useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\nimport online_friends from '../image/online_friends.svg';\nimport mobile_user from '../image/mobile_user.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter,faFacebook,faGoogle,faGithub} from '@fortawesome/free-brands-svg-icons';\nimport { faUser,faLock,faEnvelope} from '@fortawesome/free-solid-svg-icons';\nimport toast from 'react-hot-toast';\nimport {FacebookProvider , GoogleProvider , GithubProvider, TwitterProvider} from '../service/authmethod';\nimport SocialAuth from '../service/auth'\nimport '../css/Signinup.css';\nimport {UserContext} from '../App';\nimport socket from '../www/socket';\n\nconst Signinup = ({props}) =>{\n    const {state , dispatch} = useContext(UserContext);\n    let history = useHistory();\n    const[isOpen,setIsOpen] = useState(false);\n    const [username , setusername] = useState('');\n    const [email , setemail] = useState('');\n    const [password , setpassword] = useState('');\n    const OnClick = () =>{\n        setIsOpen(!isOpen)\n    }\n\n    const OnSubmitSignup = (event) => {\n        event.preventDefault();\n      fetch('/signup', {\n        method: 'post',\n        credentials:'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username,\n          email,\n          password,\n        }),\n      })\n        .then((response) => response.json())\n        .then(({error , message}) => {\n          if(error)\n          toast.error(error);\n          else if(message)\n          toast.success(message);\n        })\n    };\n        const OnSubmitSignin = (event) => {\n          event.preventDefault();\n          fetch('/signin', {\n            method: 'post',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              email,\n              password,\n            }),\n          })\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(data);\n              if (data.error) toast.error(data.error);\n              else\n              { props.toggleSign(true); \n                toast.success('Successfully Signed In');\n                history.push('/home');\n                socket.auth = {username : data.savedperson.username};\n                console.log('triggered');\n                socket.connect();\n                dispatch({type:'USER',payload:data.savedperson})\n              }\n            });\n        };\n\n        const Validation = (e) =>{\n          if(e ==='Username')\n          {\n            if(!(/^[a-z\\d]{5,12}$/i.test(username)))\n             {toast.error('Username must be 5 to 12 character long');\n            }\n\n          }\n          else if(e === 'Email')\n          {\n            if(!(/^([a-z\\d.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/.test(email)))\n            toast.error('Invalid Email');\n          }\n          else if(e === 'Password')\n          if(!(/^[#\\w@_-]{8,20}$/.test(password)))\n          toast.error('Password should be 8 to 20 characters long with @ # - _ special characters');\n\n        }\n        const AuthHandler = async (provider) =>{\n          const res = await SocialAuth(provider);\n          console.log(res);\n        }\n    return (\n      <div className={classNames('signinup', { 'sign-up-mode': isOpen })}>\n        <div className='forms-container'>\n          <div className='signin-signup'>\n            <form className='sign-in-form'>\n              <h2 className='title'>Welcome Back</h2>\n              <h4 style={{ marginBottom: '1.5rem', color: '#444' }}>\n                Login to your account\n              </h4>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faUser} />{' '}\n                </span>\n                <input\n                  type='text'\n                  placeholder='Email'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setemail(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faLock} />{' '}\n                </span>\n                <input\n                  type='password'\n                  placeholder='Password'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setpassword(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <input\n                type='submit'\n                value='Login'\n                className='btn solid'\n                onClick={(event) => OnSubmitSignin(event)}\n              />\n              {/* <p className='social-text' style={{ marginTop: '0.3rem' }}>\n                Or Sign in with social platforms\n              </p>\n              <div className='social-media'>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    onClick={() => AuthHandler(GoogleProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faTwitter}\n                    onClick={() => AuthHandler(TwitterProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faFacebook}\n                    onClick={() => AuthHandler(FacebookProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    onClick={() => AuthHandler(GithubProvider)}\n                  />\n                </p>\n              </div> */}\n            </form>\n\n            <form className='sign-up-form'>\n              <h2 style={{ marginBottom: '1.5rem' }} className='title'>\n                Create an account\n              </h2>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faUser} />{' '}\n                </span>\n                <input\n                  type='text'\n                  placeholder='Username'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setusername(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faEnvelope} />{' '}\n                </span>\n                <input\n                  type='text'\n                  placeholder='Email'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setemail(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faLock} />{' '}\n                </span>\n                <input\n                  type='password'\n                  placeholder='Password'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setpassword(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <input\n                type='submit'\n                value='Sign up'\n                className='btn solid'\n                onClick={(event) => OnSubmitSignup(event)}\n              />\n              {/* <p className='social-text' style={{ marginTop: '0.3rem' }}>\n                Or Sign Up with social platforms\n              </p>\n              <div className='social-media'>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    onClick={() => AuthHandler(GoogleProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faTwitter}\n                    onClick={() => AuthHandler(TwitterProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faFacebook}\n                    onClick={() => AuthHandler(FacebookProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    onClick={() => AuthHandler(GithubProvider)}\n                  />\n                </p>\n              </div> */}\n            </form>\n          </div>\n        </div>\n        <div className='panels-container'>\n          <div className='panel left-panel'>\n            <div className='content'>\n              <h2>Looking for fellow Coders and Developers</h2>\n              <p>\n                We give you access to million of people to connect with you.Be a\n                part of our commnity and enjoy.\n              </p>\n              <button\n                className='btn transparent'\n                id='sign-up-btn'\n                style={{ marginTop: '0.2rem' }}\n                onClick={OnClick}\n              >\n                Sign Up\n              </button>\n            </div>\n            <img src={online_friends} className='image' alt='' />\n          </div>\n          <div className='panel right-panel'>\n            <div className='content'>\n              <h2>Looking for fellow Coders and Developers</h2>\n              <p>\n                We give you access to million of people to connect with you.Be a\n                part of our commnity and enjoy.\n              </p>\n              <button\n                className='btn transparent'\n                id='sign-in-btn'\n                style={{ marginTop: '0.2rem' }}\n                onClick={OnClick}\n              >\n                Sign In\n              </button>\n            </div>\n            <img src={mobile_user} className='image' alt='' />\n          </div>\n        </div>\n      </div>\n    );\n    \n}\n\nconst LoginSignUp = (props) =>{\n    return(\n        <Signinup props ={props} />)\n}\nexport default LoginSignUp;","/home/swarnim/Codevelopers/client/src/components/Navbar.js",["77","78"],"import React,{useContext , useState} from 'react';\nimport '../css/Navbar.css';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport {AppBar , Toolbar , IconButton , Typography , InputBase , Badge , MenuItem , Menu , List , ListItemText , ListItem , ListItemAvatar , Avatar , Divider} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport {Link, useHistory} from 'react-router-dom';\nimport { UserContext } from '../App';\nimport toast from 'react-hot-toast';\nimport swarnim from '../image/swarnim.jpeg';\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    marginBottom: '4rem',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: '#414141',\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor:'pointer',\n    zIndex:'5'\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  list: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper,\n    height:'10rem'\n  },\n  inline: {\n    display: 'inline',\n  },\n  searchresult:{\n    position:'absolute',\n    zIndex:'10',\n  }\n}));\n\nexport default function PrimarySearchAppBar({setisSignin}) {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(UserContext);\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n  const [ searchusers ,setsearchusers] = useState(null);\n  const [ searchterm , setsearchterm] = useState('')\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const handleLogout = (e) =>{\n    e.preventDefault();\n    fetch('/logout', {\n      method: 'get',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setisSignin(false);\n        history.push('/');\n        toast.success('Successfully logged Out')\n        dispatch({ type: 'CLEAR'});\n        localStorage.clear();\n      });\n  }\n\n    const clearInput = () => {\n      setsearchusers(null);\n      setsearchterm('');\n      console.log('close')\n    };\n\n  const fetchuser = (e) => {\n    let query = e.target.value;\n    setsearchterm(query);\n    fetch('/search-user', {\n      method: 'post',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query\n      }),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result)\n        if(query === '')\n        setsearchusers(null);\n        else if(result.length === 0)\n        setsearchusers([]);\n        else\n        setsearchusers(result);\n\n      });\n  }\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <Link to='/profile' style={{ cursor: 'pointer', textDecoration: 'none' }}>\n        <MenuItem onClick={handleMenuClose}> Profile</MenuItem>\n      </Link>\n\n      <Link\n        to='/createpost'\n        style={{ cursor: 'pointer', textDecoration: 'none' }}\n      >\n        {' '}\n        <MenuItem onClick={handleMenuClose}>Create Post </MenuItem>\n      </Link>\n\n      <MenuItem onClick={handleMenuClose}>\n        <span style={{ cursor: 'pointer' }} onClick={(e) => handleLogout(e)}>\n          Logout\n        </span>\n      </MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Link to='/message' style = {{ cursor: 'pointer', textDecoration: 'none' }}>\n      <MenuItem>\n        <IconButton aria-label='show 4 new mails' color='inherit'>\n          <Badge badgeContent={4} color='secondary'>\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      </Link>\n      {/* <MenuItem>\n        <IconButton aria-label='show 11 new notifications' color='inherit'>\n          <Badge badgeContent={11} color='secondary'>\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label='account of current user'\n          aria-controls='primary-search-account-menu'\n          aria-haspopup='true'\n          color='inherit'\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar>\n        <Toolbar style={{ backgroundColor: '#101010' }}>\n          <Typography className={classes.title} variant='h6' noWrap>\n            <Link\n              to='/home'\n              style={{\n                cursor: 'pointer',\n                textDecoration: 'none',\n                color: 'white',\n              }}\n            >\n              Codevelopers\n            </Link>\n          </Typography>\n          <div>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                {searchusers ? (\n                  <CloseIcon\n                    id='clearBtn'\n                    onClick={clearInput}\n                    style={{ cursor: 'pointer' }}\n                  />\n                ) : (\n                  <SearchIcon />\n                )}\n              </div>\n              <InputBase\n                placeholder='Search…'\n                value={searchterm}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(e) => fetchuser(e)}\n              />\n            </div>\n            <div\n              className={classes.searchresult}\n              style={{\n                overflow: 'hidden',\n                overflowY: 'auto',\n                minWidth: '20rem',\n                marginTop: '0.2rem',\n              }}\n            >\n              {searchusers ? (\n                searchusers.length === 0 ? (\n                  <p style = {{ background:'white', color:'black'}}>Oops ! No user found</p>\n                ) : (\n                  <List className={classes.list}>\n                    {searchusers.map((item) => {\n                      return (\n                        <div>\n                          <ListItem alignItems='flex-start'>\n                            <ListItemAvatar>\n                              <Avatar alt={item.username} src={swarnim} />\n                            </ListItemAvatar>\n                            <Link\n                              style={{ textDecoration: 'none', color: 'black' }}\n                              to={\n                                item._id !== state._id\n                                  ? `/profile/${item._id}`\n                                  : '/profile'\n                              }\n                            >\n                              <Typography color='textPrimary'>\n                                {item.username}\n                              </Typography>\n                            </Link>\n                          </ListItem>\n                          <Divider variant='inset' component='li' />\n                        </div>\n                      );\n                    })}\n                  </List>\n                )\n              ) : null}\n            </div>\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Link to='/message' style = {{ cursor: 'pointer', textDecoration: 'none' }}>\n            <IconButton aria-label='show 4 new mails' color='inherit'>\n              <Badge badgeContent={4} color='secondary'>\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            </Link>\n            {/* <IconButton aria-label='show 17 new notifications' color='inherit'>\n              <Badge badgeContent={17} color='secondary'>\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge='end'\n              aria-label='account of current user'\n              aria-controls={menuId}\n              aria-haspopup='true'\n              onClick={handleProfileMenuOpen}\n              color='inherit'\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label='show more'\n              aria-controls={mobileMenuId}\n              aria-haspopup='true'\n              onClick={handleMobileMenuOpen}\n              color='inherit'\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/home/swarnim/Codevelopers/client/src/reportWebVitals.js",[],["79","80"],"/home/swarnim/Codevelopers/client/src/components/UserProfile.js",["81","82"],"import React, { useContext, useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport swarnim from '../image/swarnim.jpeg';\nimport '../css/profile.css';\nimport { UserContext } from '../App';\nconst UserProfile = () => {\n  const [userprofile, setuserprofile] = useState(null);\n  const [userpost, setuserpost] = useState(null);\n  const { state , dispatch } = useContext(UserContext)\n  console.log('userprofile:' , userprofile);\n  console.log('userpost',userpost);\n  const {userId} = useParams();\n  useEffect(() => {\n    fetch(`/profile/${userId}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('detail of fetched userId',data);\n        setuserprofile(data.user);\n        setuserpost(data.post);\n      });\n  }, []);\n\n  const FollowUser = (followId) =>{\n          fetch('/follow', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            followId\n           }),\n          })\n          .then((response) => response.json())\n          .then((data) => {\n            setuserprofile(data.result2)\n          });\n}\n  const UnFollowUser = (followId) =>{\n          fetch('/unfollow', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            followId\n           }),\n          })\n          .then((response) => response.json())\n          .then((data) => {\n            setuserprofile(data.result2)\n          });\n}\n  return (\n    <>\n      {userprofile && userpost ? (\n        <div\n          style={{\n            margin: '0px auto',\n            maxWidth: '970px',\n            marginTop: '5rem',\n            padding: '0 0.5rem',\n          }}\n        >\n          <div\n            className='row'\n            style={{ borderBottom: '1px solid grey', paddingBottom: '3rem' }}\n          >\n            <div className='col-md-3'>\n              <img\n                src={swarnim}\n                alt='profile'\n                style={{\n                  height: '160px',\n                  width: '160px',\n                  borderRadius: '50%',\n                  objectFit: 'cover',\n                }}\n              />\n            </div>\n            <div\n              className='col-md-9'\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                }}\n              >\n                <h3 style={{ marginRight: '1.5rem' }}>\n                  {userprofile.username}\n                </h3>\n\n                {userprofile.followers.includes(state._id) ? (\n                  <button\n                    style={{\n                      width: '7rem',\n                      height: '2rem',\n                      border: 'none',\n                      color: 'white',\n                      background: '#019be6',\n                    }}\n                    onClick={() => UnFollowUser(userprofile._id)}\n                  >\n                    UnFollow\n                  </button>\n                ) : (\n                  <button\n                    style={{\n                      width: '7rem',\n                      height: '2rem',\n                      border: 'none',\n                      color: 'white',\n                      background: '#019be6',\n                    }}\n                    onClick={() => FollowUser(userprofile._id)}\n                  >\n                    Follow\n                  </button>\n                )}\n              </div>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}\n              >\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userpost.length}</b> posts\n                </h6>\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userprofile.followers.length}</b> followers\n                </h6>\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userprofile.following.length}</b> following\n                </h6>\n              </div>\n              <div>\n                <h6>\n                  <b>{userprofile.username}</b>\n                </h6>\n                <h6>IIIT Gwalior</h6>\n              </div>\n            </div>\n          </div>\n          <div className='posts'>\n            {userpost.map((item) => {\n              return <img className='post' src={item.imageuri} alt='post' />;\n            })}\n          </div>\n        </div>\n      ) : (\n        <h2\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            alignContent: 'center',\n          }}\n        >\n          Loading...\n        </h2>\n      )}\n    </>\n  );\n};\n\nexport default UserProfile;\n","/home/swarnim/Codevelopers/client/src/service/authmethod.js",[],"/home/swarnim/Codevelopers/client/src/App.js",["83","84"],"/home/swarnim/Codevelopers/client/src/components/message.js",["85","86"],"/home/swarnim/Codevelopers/client/src/components/createpost.js",["87","88"],"/home/swarnim/Codevelopers/client/src/components/home.js",["89"],"import React,{useState,useEffect, useContext, useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Card , CardHeader , CardMedia , CardContent , CardActions , Avatar ,IconButton , Typography} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faGrin } from '@fortawesome/free-regular-svg-icons';\nimport { UserContext } from '../App';\nimport { Link } from 'react-router-dom';\nimport socket from '../www/socket';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '600px',\n    margin:'0px auto',\n    marginTop:'5rem'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst Homepost = () => {\n  const classes = useStyles();\n  const {state , dispatch } = useContext(UserContext);\n  // const loggedInUser = useContext(LoggedInUserContext);\n\n  const checkIfUserExists = useCallback(() => {\n    const sessionID = localStorage.getItem(\"sessionID\");\n    if(sessionID){\n    socket.auth = { sessionID };\n    socket.connect();\n  }\n  },[])\n  useEffect(() => {\n    checkIfUserExists();\n    socket.on(\"session\", ({ sessionID, userID, username }) => {\n      // attach the session ID to the next reconnection attempts\n      socket.auth = { sessionID };\n      // store it in the localStorage\n      localStorage.setItem(\"sessionID\", sessionID);\n      // save the ID of the user\n      socket.userID = userID;\n      // loggedInUser.ToggleUser(userID);\n      localStorage.setItem(\"userID\", userID);\n    });\n    // socket.on('connect', () => {\n    //   console.log(socket.id);\n    // })\n  },[checkIfUserExists])\n\n  useEffect(()=>{\n    fetch('/showpost', {\n      method: 'get',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n    })\n    .then((response) => response.json())\n    .then((data)=>{\n      sethomepost(data);\n      console.log('to fetch data on refresh : /showpost',data);\n    });\n  },[])\n  \n  const [homepost , sethomepost] = useState([]);\n  console.log(homepost,'before fetching')\n  const [ comment , setcomment] = useState('');\n  const likepost = (id) =>{\n      fetch('/like', {\n        method: 'put',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          postId:id\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          const newhomepost = homepost.map((item)=>{\n              if(item._id === data._id ){\n                return(data);\n              }\n              else\n              return item;\n          })\n          sethomepost(newhomepost);\n        });\n  }\n\n    const unlikepost = (id) => {\n      fetch('/unlike', {\n        method: 'put',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          postId: id,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          const newhomepost = homepost.map((item) => {\n            if (item._id === data._id) {\n              return data;\n            } else return item;\n          });\n          sethomepost(newhomepost);\n        });\n    };\n\n      const Comment = (id , comment) => {\n        fetch('/comment', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            postId: id,\n            comment,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            const newhomepost  = homepost.map((item) => {\n              if (item._id === data._id) {\n                return data;\n              } else return item;\n            });\n            setcomment('')\n            sethomepost(newhomepost);\n          });\n      };\n\n            const DeleteComment = (id, commentId) => {\n              fetch(`/delete/${commentId}`, {\n                method: 'delete',\n                credentials: 'include',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                  postId: id,\n                }),\n              })\n                .then((response) => response.json())\n                .then((data) => {\n                  console.log(data);\n                  const newhomepost = homepost.map((item) => {\n                    if (item._id === data._id) {\n                      return data;\n                    } else return item;\n                  });\n                  sethomepost(newhomepost);\n                });\n            };\n  return (\n    <div className={classes.root}>\n      {homepost.map(({ caption, imageuri, likes, comments, postedBy, _id }) => {\n        return (\n          <Card key={_id} style={{marginBottom:'1rem'}}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label='recipe' className={classes.avatar}>\n                  S\n                </Avatar>\n              }\n              action={\n                <IconButton aria-label='settings'>\n                  <MoreVertIcon />\n                </IconButton>\n              }\n              title={\n                <Link\n                  style={{ textDecoration: 'none' , color:'black' }}\n                  to={\n                    postedBy._id !== state._id\n                      ? `/profile/${postedBy._id}`\n                      : '/profile'\n                  }\n                >\n                  {postedBy.username}\n                </Link>\n              }\n              subheader='Indian Institute of Information Technology and Management,Gwalior'\n            />\n            <CardMedia\n              className={classes.media}\n              title='posts'\n              image={imageuri}\n            />\n            <CardContent>\n              <Typography variant='body2' component='p'>\n                {caption}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton aria-label='add to favorites'>\n                {likes.includes(state._id) ? (\n                  <FavoriteIcon\n                    style={{ color: red[500] }}\n                    onClick={() => {\n                      unlikepost(_id);\n                    }}\n                  />\n                ) : (\n                  <FavoriteIcon\n                    onClick={() => {\n                      likepost(_id);\n                    }}\n                  />\n                )}\n              </IconButton>\n              <Typography variant='subtitle2' color='textSecondary'>\n                {likes.length} likes\n              </Typography>\n            </CardActions>\n\n            <CardContent>\n              {comments.map((item) => {\n                return (\n                  <Typography paragraph key={item._id}>\n                      {\n                        <Link\n                          style={{\n                            textDecoration: 'none',\n                            color: 'black',\n                            fontWeight: 'bold',\n                          }}\n                          to={\n                            item.postedBy._id !== state._id\n                              ? `/profile/${item.postedBy._id}`\n                              : '/profile'\n                          }\n                        >\n                          {item.postedBy.username}\n                        </Link>\n                      }{' '}\n                    {item.comment}\n                    {item.postedBy._id === state._id ? (\n                      <span style={{ float: 'right', cursor: 'pointer' }}>\n                        <FontAwesomeIcon\n                          icon={faTrash}\n                          onClick={() => DeleteComment(_id, item._id)}\n                        />\n                      </span>\n                    ) : null}\n                  </Typography>\n                );\n              })}\n            </CardContent>\n\n            <div style={{ padding: '0.8rem 0' }}>\n              <span style={{ padding: '0 0.6rem ' }}>\n                <FontAwesomeIcon icon={faGrin} />\n              </span>\n              <input\n                type='text'\n                placeholder='Add a comment....'\n                value={comment}\n                style={{\n                  background: 'none',\n                  outline: 'none',\n                  border: 'none',\n                  lineHeight: '1',\n                  fontWeight: '6000',\n                  fontSize: '1.0rem',\n                  color: '#333',\n                  padding: '0 0.4rem',\n                  width: '65%',\n                }}\n                onChange={(e) => setcomment(e.target.value)}\n              />\n              <button\n                style={{\n                  background: 'none',\n                  outline: 'none',\n                  border: 'none',\n                  lineHeight: '2',\n                  fontWeight: '6000',\n                  fontSize: '1.0rem',\n                  color: 'blue',\n                  float: 'right',\n                  margin: '0 1rem',\n                }}\n                onClick={() => Comment(_id, comment)}\n              >\n                Post\n              </button>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\nexport default Homepost;","/home/swarnim/Codevelopers/client/src/components/profile.js",["90"],"/home/swarnim/Codevelopers/client/src/reducers/userReducer.js",[],"/home/swarnim/Codevelopers/client/src/components/chat.js",["91","92"],"/home/swarnim/Codevelopers/client/src/www/socket.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":7,"column":20,"nodeType":"99","messageId":"100","endLine":7,"endColumn":30},{"ruleId":"97","severity":1,"message":"102","line":7,"column":31,"nodeType":"99","messageId":"100","endLine":7,"endColumn":39},{"ruleId":"97","severity":1,"message":"103","line":7,"column":40,"nodeType":"99","messageId":"100","endLine":7,"endColumn":48},{"ruleId":"97","severity":1,"message":"104","line":10,"column":9,"nodeType":"99","messageId":"100","endLine":10,"endColumn":25},{"ruleId":"97","severity":1,"message":"105","line":10,"column":28,"nodeType":"99","messageId":"100","endLine":10,"endColumn":42},{"ruleId":"97","severity":1,"message":"106","line":10,"column":45,"nodeType":"99","messageId":"100","endLine":10,"endColumn":59},{"ruleId":"97","severity":1,"message":"107","line":10,"column":61,"nodeType":"99","messageId":"100","endLine":10,"endColumn":76},{"ruleId":"97","severity":1,"message":"108","line":17,"column":12,"nodeType":"99","messageId":"100","endLine":17,"endColumn":17},{"ruleId":"97","severity":1,"message":"109","line":92,"column":15,"nodeType":"99","messageId":"100","endLine":92,"endColumn":26},{"ruleId":"97","severity":1,"message":"110","line":4,"column":99,"nodeType":"99","messageId":"100","endLine":4,"endColumn":111},{"ruleId":"97","severity":1,"message":"111","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":25},{"ruleId":"93","replacedBy":"112"},{"ruleId":"95","replacedBy":"113"},{"ruleId":"97","severity":1,"message":"114","line":9,"column":19,"nodeType":"99","messageId":"100","endLine":9,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":25,"column":6,"nodeType":"117","endLine":25,"endColumn":8,"suggestions":"118"},{"ruleId":"97","severity":1,"message":"108","line":17,"column":17,"nodeType":"99","messageId":"100","endLine":17,"endColumn":22},{"ruleId":"115","severity":1,"message":"119","line":40,"column":8,"nodeType":"117","endLine":40,"endColumn":10,"suggestions":"120"},{"ruleId":"97","severity":1,"message":"121","line":1,"column":30,"nodeType":"99","messageId":"100","endLine":1,"endColumn":40},{"ruleId":"97","severity":1,"message":"122","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"123","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":16},{"ruleId":"115","severity":1,"message":"124","line":46,"column":5,"nodeType":"117","endLine":46,"endColumn":15,"suggestions":"125"},{"ruleId":"97","severity":1,"message":"114","line":30,"column":18,"nodeType":"99","messageId":"100","endLine":30,"endColumn":26},{"ruleId":"97","severity":1,"message":"114","line":8,"column":19,"nodeType":"99","messageId":"100","endLine":8,"endColumn":27},{"ruleId":"97","severity":1,"message":"126","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"127","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'faTwitter' is defined but never used.","Identifier","unusedVar","'faFacebook' is defined but never used.","'faGoogle' is defined but never used.","'faGithub' is defined but never used.","'FacebookProvider' is defined but never used.","'GoogleProvider' is defined but never used.","'GithubProvider' is defined but never used.","'TwitterProvider' is defined but never used.","'state' is assigned a value but never used.","'AuthHandler' is assigned a value but never used.","'ListItemText' is defined but never used.","'NotificationsIcon' is defined but never used.",["128"],["129"],"'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'setisSignin'. Either include them or remove the dependency array. If 'setisSignin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has missing dependencies: 'caption' and 'history'. Either include them or remove the dependency array.",["132"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [userId]",{"range":"139","text":"140"},"Update the dependencies array to be: [dispatch, history, setisSignin]",{"range":"141","text":"142"},"Update the dependencies array to be: [caption, history, imageuri]",{"range":"143","text":"144"},[892,894],"[userId]",[1579,1581],"[dispatch, history, setisSignin]",[1372,1382],"[caption, history, imageuri]"]