[{"/home/swarnim/Codevelopers/client/src/index.js":"1","/home/swarnim/Codevelopers/client/src/components/Signinup.js":"2","/home/swarnim/Codevelopers/client/src/components/Navbar.js":"3","/home/swarnim/Codevelopers/client/src/reportWebVitals.js":"4","/home/swarnim/Codevelopers/client/src/components/UserProfile.js":"5","/home/swarnim/Codevelopers/client/src/service/authmethod.js":"6","/home/swarnim/Codevelopers/client/src/App.js":"7","/home/swarnim/Codevelopers/client/src/components/message.js":"8","/home/swarnim/Codevelopers/client/src/components/createpost.js":"9","/home/swarnim/Codevelopers/client/src/components/home.js":"10","/home/swarnim/Codevelopers/client/src/components/profile.js":"11","/home/swarnim/Codevelopers/client/src/reducers/userReducer.js":"12","/home/swarnim/Codevelopers/client/src/components/chat.js":"13"},{"size":500,"mtime":1675762173248,"results":"14","hashOfConfig":"15"},{"size":12185,"mtime":1676854834000,"results":"16","hashOfConfig":"15"},{"size":11092,"mtime":1677091587955,"results":"17","hashOfConfig":"15"},{"size":362,"mtime":1675762173248,"results":"18","hashOfConfig":"15"},{"size":5149,"mtime":1675762173248,"results":"19","hashOfConfig":"15"},{"size":345,"mtime":1675762173252,"results":"20","hashOfConfig":"21"},{"size":3294,"mtime":1677190757021,"results":"22","hashOfConfig":"15"},{"size":4997,"mtime":1677193618023,"results":"23","hashOfConfig":"15"},{"size":3948,"mtime":1675762173248,"results":"24","hashOfConfig":"15"},{"size":9617,"mtime":1677190836256,"results":"25","hashOfConfig":"15"},{"size":3475,"mtime":1675762173248,"results":"26","hashOfConfig":"15"},{"size":239,"mtime":1675762173248,"results":"27","hashOfConfig":"15"},{"size":319,"mtime":1677193156723,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1u6pljq",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yho38g",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/swarnim/Codevelopers/client/src/index.js",[],["58","59"],"/home/swarnim/Codevelopers/client/src/components/Signinup.js",["60"],"import React,{useState , useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\nimport online_friends from '../image/online_friends.svg';\nimport mobile_user from '../image/mobile_user.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter,faFacebook,faGoogle,faGithub} from '@fortawesome/free-brands-svg-icons';\nimport { faUser,faLock,faEnvelope} from '@fortawesome/free-solid-svg-icons';\nimport toast from 'react-hot-toast';\nimport {FacebookProvider , GoogleProvider , GithubProvider, TwitterProvider} from '../service/authmethod';\nimport SocialAuth from '../service/auth'\nimport '../css/Signinup.css';\nimport {UserContext} from '../App';\nimport socket from '../www/socket';\n\nconst Signinup = ({props}) =>{\n    const {state , dispatch} = useContext(UserContext);\n    let history = useHistory();\n    const[isOpen,setIsOpen] = useState(false);\n    const [username , setusername] = useState('');\n    const [email , setemail] = useState('');\n    const [password , setpassword] = useState('');\n    const OnClick = () =>{\n        setIsOpen(!isOpen)\n    }\n\n    const OnSubmitSignup = (event) => {\n        event.preventDefault();\n      fetch('/signup', {\n        method: 'post',\n        credentials:'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username,\n          email,\n          password,\n        }),\n      })\n        .then((response) => response.json())\n        .then(({error , message}) => {\n          if(error)\n          toast.error(error);\n          else if(message)\n          toast.success(message);\n        })\n    };\n        const OnSubmitSignin = (event) => {\n          event.preventDefault();\n          fetch('/signin', {\n            method: 'post',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              email,\n              password,\n            }),\n          })\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(data);\n              if (data.error) toast.error(data.error);\n              else\n              { props.toggleSign(true); \n                toast.success('Successfully Signed In');\n                history.push('/home');\n                socket.auth = {username : data.savedperson.username};\n                console.log('triggered');\n                socket.connect();\n                dispatch({type:'USER',payload:data.savedperson})\n              }\n            });\n        };\n\n        const Validation = (e) =>{\n          if(e ==='Username')\n          {\n            if(!(/^[a-z\\d]{5,12}$/i.test(username)))\n             {toast.error('Username must be 5 to 12 character long');\n            }\n\n          }\n          else if(e === 'Email')\n          {\n            if(!(/^([a-z\\d.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/.test(email)))\n            toast.error('Invalid Email');\n          }\n          else if(e === 'Password')\n          if(!(/^[#\\w@_-]{8,20}$/.test(password)))\n          toast.error('Password should be 8 to 20 characters long with @ # - _ special characters');\n\n        }\n        const AuthHandler = async (provider) =>{\n          const res = await SocialAuth(provider);\n          console.log(res);\n        }\n    return (\n      <div className={classNames('signinup', { 'sign-up-mode': isOpen })}>\n        <div className='forms-container'>\n          <div className='signin-signup'>\n            <form className='sign-in-form'>\n              <h2 className='title'>Welcome Back</h2>\n              <h4 style={{ marginBottom: '1.5rem', color: '#444' }}>\n                Login to your account\n              </h4>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faUser} />{' '}\n                </span>\n                <input\n                  type='text'\n                  placeholder='Email'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setemail(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faLock} />{' '}\n                </span>\n                <input\n                  type='password'\n                  placeholder='Password'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setpassword(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <input\n                type='submit'\n                value='Login'\n                className='btn solid'\n                onClick={(event) => OnSubmitSignin(event)}\n              />\n              <p className='social-text' style={{ marginTop: '0.3rem' }}>\n                Or Sign in with social platforms\n              </p>\n              <div className='social-media'>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    onClick={() => AuthHandler(GoogleProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faTwitter}\n                    onClick={() => AuthHandler(TwitterProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faFacebook}\n                    onClick={() => AuthHandler(FacebookProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    onClick={() => AuthHandler(GithubProvider)}\n                  />\n                </p>\n              </div>\n            </form>\n\n            <form className='sign-up-form'>\n              <h2 style={{ marginBottom: '1.5rem' }} className='title'>\n                Create an account\n              </h2>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faUser} />{' '}\n                </span>\n                <input\n                  type='text'\n                  placeholder='Username'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setusername(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faEnvelope} />{' '}\n                </span>\n                <input\n                  type='text'\n                  placeholder='Email'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setemail(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <div className='input-field'>\n                <span className='userlabel'>\n                  {' '}\n                  <FontAwesomeIcon icon={faLock} />{' '}\n                </span>\n                <input\n                  type='password'\n                  placeholder='Password'\n                  style={{\n                    background: 'none',\n                    outline: 'none',\n                    border: 'none',\n                    lineHeight: '1',\n                    fontWeight: '6000',\n                    fontSize: '1.0rem',\n                    color: '#333',\n                  }}\n                  onChange={(e) => setpassword(e.target.value)}\n                  onBlur={(e) => Validation(e.target.placeholder)}\n                />\n              </div>\n              <input\n                type='submit'\n                value='Sign up'\n                className='btn solid'\n                onClick={(event) => OnSubmitSignup(event)}\n              />\n              <p className='social-text' style={{ marginTop: '0.3rem' }}>\n                Or Sign Up with social platforms\n              </p>\n              <div className='social-media'>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    onClick={() => AuthHandler(GoogleProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faTwitter}\n                    onClick={() => AuthHandler(TwitterProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faFacebook}\n                    onClick={() => AuthHandler(FacebookProvider)}\n                  />\n                </p>\n                <p className='social-icon' style={{ cursor: 'pointer' }}>\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    onClick={() => AuthHandler(GithubProvider)}\n                  />\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className='panels-container'>\n          <div className='panel left-panel'>\n            <div className='content'>\n              <h2>Looking for fellow Coders and Developers</h2>\n              <p>\n                We give you access to million of people to connect with you.Be a\n                part of our commnity and enjoy.\n              </p>\n              <button\n                className='btn transparent'\n                id='sign-up-btn'\n                style={{ marginTop: '0.2rem' }}\n                onClick={OnClick}\n              >\n                Sign Up\n              </button>\n            </div>\n            <img src={online_friends} className='image' alt='' />\n          </div>\n          <div className='panel right-panel'>\n            <div className='content'>\n              <h2>Looking for fellow Coders and Developers</h2>\n              <p>\n                We give you access to million of people to connect with you.Be a\n                part of our commnity and enjoy.\n              </p>\n              <button\n                className='btn transparent'\n                id='sign-in-btn'\n                style={{ marginTop: '0.2rem' }}\n                onClick={OnClick}\n              >\n                Sign In\n              </button>\n            </div>\n            <img src={mobile_user} className='image' alt='' />\n          </div>\n        </div>\n      </div>\n    );\n    \n}\n\nconst LoginSignUp = (props) =>{\n    return(\n        <Signinup props ={props} />)\n}\nexport default LoginSignUp;","/home/swarnim/Codevelopers/client/src/components/Navbar.js",["61","62"],"/home/swarnim/Codevelopers/client/src/reportWebVitals.js",[],"/home/swarnim/Codevelopers/client/src/components/UserProfile.js",["63","64"],"import React, { useContext, useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport swarnim from '../image/swarnim.jpeg';\nimport '../css/profile.css';\nimport { UserContext } from '../App';\nconst UserProfile = () => {\n  const [userprofile, setuserprofile] = useState(null);\n  const [userpost, setuserpost] = useState(null);\n  const { state , dispatch } = useContext(UserContext)\n  console.log('userprofile:' , userprofile);\n  console.log('userpost',userpost);\n  const {userId} = useParams();\n  useEffect(() => {\n    fetch(`/profile/${userId}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('detail of fetched userId',data);\n        setuserprofile(data.user);\n        setuserpost(data.post);\n      });\n  }, []);\n\n  const FollowUser = (followId) =>{\n          fetch('/follow', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            followId\n           }),\n          })\n          .then((response) => response.json())\n          .then((data) => {\n            setuserprofile(data.result2)\n          });\n}\n  const UnFollowUser = (followId) =>{\n          fetch('/unfollow', {\n          method: 'put',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            followId\n           }),\n          })\n          .then((response) => response.json())\n          .then((data) => {\n            setuserprofile(data.result2)\n          });\n}\n  return (\n    <>\n      {userprofile && userpost ? (\n        <div\n          style={{\n            margin: '0px auto',\n            maxWidth: '970px',\n            marginTop: '5rem',\n            padding: '0 0.5rem',\n          }}\n        >\n          <div\n            className='row'\n            style={{ borderBottom: '1px solid grey', paddingBottom: '3rem' }}\n          >\n            <div className='col-md-3'>\n              <img\n                src={swarnim}\n                alt='profile'\n                style={{\n                  height: '160px',\n                  width: '160px',\n                  borderRadius: '50%',\n                  objectFit: 'cover',\n                }}\n              />\n            </div>\n            <div\n              className='col-md-9'\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                }}\n              >\n                <h3 style={{ marginRight: '1.5rem' }}>\n                  {userprofile.username}\n                </h3>\n\n                {userprofile.followers.includes(state._id) ? (\n                  <button\n                    style={{\n                      width: '7rem',\n                      height: '2rem',\n                      border: 'none',\n                      color: 'white',\n                      background: '#019be6',\n                    }}\n                    onClick={() => UnFollowUser(userprofile._id)}\n                  >\n                    UnFollow\n                  </button>\n                ) : (\n                  <button\n                    style={{\n                      width: '7rem',\n                      height: '2rem',\n                      border: 'none',\n                      color: 'white',\n                      background: '#019be6',\n                    }}\n                    onClick={() => FollowUser(userprofile._id)}\n                  >\n                    Follow\n                  </button>\n                )}\n              </div>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}\n              >\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userpost.length}</b> posts\n                </h6>\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userprofile.followers.length}</b> followers\n                </h6>\n                <h6 style={{ paddingRight: '4rem' }}>\n                  <b>{userprofile.following.length}</b> following\n                </h6>\n              </div>\n              <div>\n                <h6>\n                  <b>{userprofile.username}</b>\n                </h6>\n                <h6>IIIT Gwalior</h6>\n              </div>\n            </div>\n          </div>\n          <div className='posts'>\n            {userpost.map((item) => {\n              return <img className='post' src={item.imageuri} alt='post' />;\n            })}\n          </div>\n        </div>\n      ) : (\n        <h2\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            alignContent: 'center',\n          }}\n        >\n          Loading...\n        </h2>\n      )}\n    </>\n  );\n};\n\nexport default UserProfile;\n","/home/swarnim/Codevelopers/client/src/service/authmethod.js",[],"/home/swarnim/Codevelopers/client/src/App.js",["65","66"],"/home/swarnim/Codevelopers/client/src/components/message.js",["67","68"],"/home/swarnim/Codevelopers/client/src/components/createpost.js",["69","70"],"/home/swarnim/Codevelopers/client/src/components/home.js",["71"],"/home/swarnim/Codevelopers/client/src/components/profile.js",["72"],"/home/swarnim/Codevelopers/client/src/reducers/userReducer.js",[],"/home/swarnim/Codevelopers/client/src/components/chat.js",["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":17,"column":12,"nodeType":"81","messageId":"82","endLine":17,"endColumn":17},{"ruleId":"79","severity":1,"message":"83","line":4,"column":99,"nodeType":"81","messageId":"82","endLine":4,"endColumn":111},{"ruleId":"79","severity":1,"message":"84","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":25},{"ruleId":"79","severity":1,"message":"85","line":9,"column":19,"nodeType":"81","messageId":"82","endLine":9,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":25,"column":6,"nodeType":"88","endLine":25,"endColumn":8,"suggestions":"89"},{"ruleId":"79","severity":1,"message":"80","line":17,"column":17,"nodeType":"81","messageId":"82","endLine":17,"endColumn":22},{"ruleId":"86","severity":1,"message":"90","line":40,"column":8,"nodeType":"88","endLine":40,"endColumn":10,"suggestions":"91"},{"ruleId":"79","severity":1,"message":"92","line":1,"column":30,"nodeType":"81","messageId":"82","endLine":1,"endColumn":40},{"ruleId":"79","severity":1,"message":"93","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":21},{"ruleId":"79","severity":1,"message":"94","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"86","severity":1,"message":"95","line":45,"column":5,"nodeType":"88","endLine":45,"endColumn":15,"suggestions":"96"},{"ruleId":"79","severity":1,"message":"85","line":30,"column":18,"nodeType":"81","messageId":"82","endLine":30,"endColumn":26},{"ruleId":"79","severity":1,"message":"85","line":8,"column":19,"nodeType":"81","messageId":"82","endLine":8,"endColumn":27},{"ruleId":"79","severity":1,"message":"97","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"98","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'ListItemText' is defined but never used.","'NotificationsIcon' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'setisSignin'. Either include them or remove the dependency array. If 'setisSignin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["102"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has missing dependencies: 'caption' and 'history'. Either include them or remove the dependency array.",["103"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [userId]",{"range":"110","text":"111"},"Update the dependencies array to be: [dispatch, history, setisSignin]",{"range":"112","text":"113"},"Update the dependencies array to be: [caption, history, imageuri]",{"range":"114","text":"115"},[892,894],"[userId]",[1579,1581],"[dispatch, history, setisSignin]",[1328,1338],"[caption, history, imageuri]"]